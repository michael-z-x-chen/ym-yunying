var commonFn = {
    isEmpty: function (value) {
        if (value == null || value == '' || value == undefined || value.length == 0) {
            return true;
        }
        return false;
    },
    isPhone: function (phone) {
        var pattern = /^1[34578]\d{9}$/;
        return pattern.test(phone);
    },
    checkIdCard: function (iIdNo) {
        var reg = "(\\d{14}[0-9a-zA-Z])|(\\d{17}[0-9a-zA-Z])";
        var idCard = iIdNo.trim();
        if (reg.test(idCard)) {
            return true
        } else {
            return false;
        }
    },
    getBirByIdNo: function (iIdNo) {  /*根据身份证获取出生日期*/
        iIdNo = $.trim(iIdNo);
        var birDate = iIdNo.substring(6, 10) + "-" + iIdNo.substring(10, 12) + "-" + iIdNo.substring(12, 14);
        return birDate;
    },
    getSexByIdNo: function (iIdNo, maleVal, femaleVal) { /*根据身份证获取性别*/
        /*maleVal为男的代表值 femaleVal*/
        iIdNo = $.trim(iIdNo);
        if (iIdNo.length == 15) {
            sexStr = parseInt(iIdNo.substring(14, 1), 10) % 2 ? maleVal : femaleVal;
        } else {
            sexStr = parseInt(iIdNo.substring(17, 1), 10) % 2 ? maleVal : femaleVal;
        }
        return sexStr;
    },
    //身份证获取年龄 判断员工年龄是否符合16 ——65
    getAgeByIdCard: function (iIdNo) {
        iIdNo = $.trim(iIdNo);
        var myDate = new Date();
        var month = myDate.getMonth() + 1;
        var day = myDate.getDate();
        var age = myDate.getFullYear() - iIdNo.substring(6, 10) - 1;
        if (iIdNo.substring(10, 12) < month || iIdNo.substring(10, 12) == month && iIdNo.substring(12, 14) <= day) {
            age++;
        }
        if (age < 16 || age > 65) {
            return true;
        } else {
            return false;
        }
    },
    //通过员工生日年龄判断 16——65
    getAgeByBirth: function (bir) {
        var birth = bir;
        /*var time = Date.parse(new Date());
        var lasttime = Date.parse(birth);
        var age = parseInt((time - lasttime) / (1000 * 60 * 60 * 24) / 365);*/
        var returnAge,
            strBirthdayArr=birth.split("-"),
            birthYear = strBirthdayArr[0],
            birthMonth = strBirthdayArr[1],
            birthDay = strBirthdayArr[2],
            d = new Date(),
            nowYear = d.getFullYear(),
            nowMonth = d.getMonth() + 1,
            nowDay = d.getDate();
        if(nowYear == birthYear){
            returnAge = 0;//同年 则为0周岁
        }
        else{
            var ageDiff = nowYear - birthYear ; //年之差
            if(ageDiff > 0){
                if(nowMonth == birthMonth) {
                    var dayDiff = nowDay - birthDay;//日之差
                    if(dayDiff < 0) {
                        returnAge = ageDiff - 1;
                    }else {
                        returnAge = ageDiff;
                    }
                }else {
                    var monthDiff = nowMonth - birthMonth;//月之差
                    if(monthDiff < 0) {
                        returnAge = ageDiff - 1;
                    }
                    else {
                        returnAge = ageDiff ;
                    }
                }
            }else {
                returnAge = -1;//返回-1 表示出生日期输入错误 晚于今天
            }
        }
        if (returnAge < 16 || returnAge > 65) {
            return true;
        } else {
            return false;
        }
    },
    //身份证获取年龄 判断配偶年龄是否符合20 ——65
    getAgeByIdCardMate: function (iIdNo) {
        iIdNo = $.trim(iIdNo);
        var myDate = new Date();
        var month = myDate.getMonth() + 1;
        var day = myDate.getDate();
        var age = myDate.getFullYear() - iIdNo.substring(6, 10) - 1;
        if (iIdNo.substring(10, 12) < month || iIdNo.substring(10, 12) == month && iIdNo.substring(12, 14) <= day) {
            age++;
        }
        if (age < 20 || age > 65) {
            return true;
        } else {
            return false;
        }
    },
    //通过配偶生日年龄判断 20——65
    getAgeByBirthMate: function (bir) {
        var birth = bir;
        // var time = Date.parse(new Date());
        // var lasttime = Date.parse(birth);
        // var age = parseInt((time - lasttime) / (1000 * 60 * 60 * 24) / 365);
        var returnAge,
            strBirthdayArr=birth.split("-"),
            birthYear = strBirthdayArr[0],
            birthMonth = strBirthdayArr[1],
            birthDay = strBirthdayArr[2],
            d = new Date(),
            nowYear = d.getFullYear(),
            nowMonth = d.getMonth() + 1,
            nowDay = d.getDate();
        if(nowYear == birthYear){
            returnAge = 0;//同年 则为0周岁
        }
        else{
            var ageDiff = nowYear - birthYear ; //年之差
            if(ageDiff > 0){
                if(nowMonth == birthMonth) {
                    var dayDiff = nowDay - birthDay;//日之差
                    if(dayDiff < 0) {
                        returnAge = ageDiff - 1;
                    }else {
                        returnAge = ageDiff;
                    }
                }else {
                    var monthDiff = nowMonth - birthMonth;//月之差
                    if(monthDiff < 0) {
                        returnAge = ageDiff - 1;
                    }
                    else {
                        returnAge = ageDiff ;
                    }
                }
            }else {
                returnAge = -1;//返回-1 表示出生日期输入错误 晚于今天
            }
        }
        if (returnAge < 20 || returnAge > 65) {
            return true;
        } else {
            return false;
        }
    },
    //身份证获取年龄 判断子女年龄是否符合30天 ——23周岁
    getAgeByIdCardChildren: function (iIdNo) {
        iIdNo = $.trim(iIdNo);
        var birDate = iIdNo.substring(6, 10) + "-" + iIdNo.substring(10, 12) + "-" + iIdNo.substring(12, 14);
        var birth = birDate;
        var time = Date.parse(new Date());
        var lasttime = Date.parse(birth);
        var day = parseInt((time - lasttime) / (1000 * 60 * 60 * 24));
        var returnAge,
            strBirthdayArr=birth.split("-"),
            birthYear = strBirthdayArr[0],
            birthMonth = strBirthdayArr[1],
            birthDay = strBirthdayArr[2],
            d = new Date(),
            nowYear = d.getFullYear(),
            nowMonth = d.getMonth() + 1,
            nowDay = d.getDate();
        if(nowYear == birthYear){
            returnAge = 0;//同年 则为0周岁
        }
        else{
            var ageDiff = nowYear - birthYear ; //年之差
            if(ageDiff > 0){
                if(nowMonth == birthMonth) {
                    var dayDiff = nowDay - birthDay;//日之差
                    if(dayDiff < 0) {
                        returnAge = ageDiff - 1;
                    }else {
                        returnAge = ageDiff;
                    }
                }else {
                    var monthDiff = nowMonth - birthMonth;//月之差
                    if(monthDiff < 0) {
                        returnAge = ageDiff - 1;
                    }
                    else {
                        returnAge = ageDiff ;
                    }
                }
            }else {
                returnAge = -1;//返回-1 表示出生日期输入错误 晚于今天
            }
        }

        if (day < 30 || returnAge > 23) {
            return true
        } else {
            return false;
        }

    },
    //通过子女生日年龄判断 符合30天 ——23周岁
    getAgeByBirthChildren: function (bir) {
        var birth = bir;
        var time = Date.parse(new Date());
        var lasttime = Date.parse(birth);
        var day = parseInt((time - lasttime) / (1000 * 60 * 60 * 24));
        var returnAge,
            strBirthdayArr=birth.split("-"),
            birthYear = strBirthdayArr[0],
            birthMonth = strBirthdayArr[1],
            birthDay = strBirthdayArr[2],
            d = new Date(),
            nowYear = d.getFullYear(),
            nowMonth = d.getMonth() + 1,
            nowDay = d.getDate();
        if(nowYear == birthYear){
            returnAge = 0;//同年 则为0周岁
        }
        else{
            var ageDiff = nowYear - birthYear ; //年之差
            if(ageDiff > 0){
                if(nowMonth == birthMonth) {
                    var dayDiff = nowDay - birthDay;//日之差
                    if(dayDiff < 0) {
                        returnAge = ageDiff - 1;
                    }else {
                        returnAge = ageDiff;
                    }
                }else {
                    var monthDiff = nowMonth - birthMonth;//月之差
                    if(monthDiff < 0) {
                        returnAge = ageDiff - 1;
                    }
                    else {
                        returnAge = ageDiff ;
                    }
                }
            }else {
                returnAge = -1;//返回-1 表示出生日期输入错误 晚于今天
            }
        }

        if (day < 30 || returnAge > 23 ) {
            return true;
        } else {
            return false;
        }
    },
    validateIdCard: function (idCard) {
        //15位和18位身份证号码的正则表达式
        var regIdCard = /^(^[1-9]\d{7}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3}$)|(^[1-9]\d{5}[1-9]\d{3}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])((\d{4})|\d{3}[Xx])$)$/;

        //如果通过该验证，说明身份证格式正确，但准确性还需计算
        if (regIdCard.test(idCard)) {
            if (idCard.length == 18) {
                var idCardWi = new Array(7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2); //将前17位加权因子保存在数组里
                var idCardY = new Array(1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2); //这是除以11后，可能产生的11位余数、验证码，也保存成数组
                var idCardWiSum = 0; //用来保存前17位各自乖以加权因子后的总和
                for (var i = 0; i < 17; i++) {
                    idCardWiSum += idCard.substring(i, i + 1) * idCardWi[i];
                }
                var idCardMod = idCardWiSum % 11;//计算出校验码所在数组的位置
                var idCardLast = idCard.substring(17);//得到最后一位身份证号码
                //如果等于2，则说明校验码是10，身份证号码最后一位应该是X
                if (idCardMod == 2) {
                    if (idCardLast == "X" || idCardLast == "x") {
                        return true;
                    } else {
                        return false;
                    }
                } else {
                    //用计算出的验证码与最后一位身份证号码匹配，如果一致，说明通过，否则是无效的身份证号码
                    if (idCardLast == idCardY[idCardMod]) {
                        return true;
                    } else {
                        return false;
                    }
                }
            }
        } else {
            return false;
        }
    }

}

